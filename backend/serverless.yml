# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sls-web-socket
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  profiel: serverless
  runtime: python3.6
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
      Resource:
        - "arn:aws:dynamodb:us-east-1:*:*"

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get

resources:
  Resources:
    slsChatConnect:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: serverless-chat_Connections
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          -
            AttributeName: ConnectionID
            AttributeType: S
        KeySchema:
          - 
            AttributeName: ConnectionID
            KeyType: HASH
    slsChatMessages:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: serverless-chat_Messages
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          -
            AttributeName: Room
            AttributeType: S
          -
            AttributeName: Index
            AttributeType: N
        KeySchema:
          - 
            AttributeName: Room
            KeyType: HASH
          - 
            AttributeName: Index
            KeyType: RANGE
